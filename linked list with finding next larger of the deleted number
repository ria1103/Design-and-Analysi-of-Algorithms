#include<stdio.h>
#include<stdlib.h>
#include<time.h>
struct node
{
int data;
struct node *next;
};

struct node *head=NULL,*pos=NULL,*tail=NULL,*tem,*del;

int main()
{
clock_t startTime1, endTime1,startTime2, endTime2;
double timeElapsed1,timeElapsed2;
int ch,t,i,s=0,val,large;
long int n,posn;
while(1)
{
printf("\nMENU\n1.Insert\n2.Display\n3.Delete\n4.Next largest\n5.Exit\n");
printf("Enter choice:");
scanf("%d", &ch);
switch(ch)
{
case 1:
{
printf("\nEnter no. of elements:");
scanf("%ld", &n);
for(int j=0; j<n; j++)
{
if(head==NULL)
{
head=(struct node*)malloc(sizeof(struct node));
head->data=rand()%1000;
pos=head;
tail=head;
}
else
{
tail->next=(struct node*)malloc(sizeof(struct node));
tail=tail->next;
tail->data=rand()%1000;
}
}
break;
}
case 2:
{
pos=head;
while(pos!=NULL)
{
printf("%d\t",pos->data);
pos=pos->next;
}
break;
}

case 3:
{
tem=head;
printf("Enter postion of data (starting from 0): \n");
scanf("%ld",&posn);
startTime1 = clock();
if(posn==0)
{
val=head->data;
head=head->next;
tem->next=NULL;
printf("Element deleted is %d",tem->data);
free(tem);
}
else if(posn==n-1)
{for(i=0;i<posn-1;i++)
{
tem=tem->next;
}
tail=tem;
tem=tail->next;
tail->next=NULL;
printf("Element deleted is %d",tem->data);
val=tem->data;
free(tem);}
else
{
for(i=0;i<posn-1;i++)
{
tem=tem->next;
}
del=tem->next;
tem->next=tem->next->next;
del->next=NULL;
printf("Element deleted is %d",del->data);
val=del->data;
free(del);
}
n--;
endTime1 = clock();
timeElapsed1 = (double)(endTime1 - startTime1)/CLOCKS_PER_SEC;
printf("\nThe time taken for deletion is: %.15lfs\n",timeElapsed1);
break;
}
case 4:
{
startTime2 = clock();
large=head->data;
pos=head;  
while(pos!=NULL)
{
if(pos->data > large)
{
large = pos->data;
}
pos = pos->next;
}

if(val >= large)
{
printf("\nThere is no element greater than %d\n",large);
}
else
{
pos = head;
while(pos!=NULL)
{
if(pos->data > val && pos->data < large)
{
large = pos->data;
}
pos = pos->next;
}
printf("\nThe next greatest element in the list is : %d \n",large);    
}endTime2 = clock();
timeElapsed2 = (double)(endTime2 - startTime2)/CLOCKS_PER_SEC;
printf("\nThe time taken for next largest element is: %.15lfs\n",timeElapsed2);
break;
}
case 5:
{
exit(0);
}

default:
{
printf("Invalid choice!");
}
}
}
}
