#include<stdio.h>
#include<stdlib.h>
#define MAX_VERTICES 30

int visited[MAX_VERTICES];
int Graph[MAX_VERTICES][MAX_VERTICES];
int n; 

void InitializeGraph()
{
    for(int i=0; i<n; i++)
    {
        visited[i]=0;
        for(int j=0; j<n; j++)
        {
            Graph[i][j]=0;
        }
    }
}

void InputGraph()
{
    printf("Enter the adjacency matrix: \n");
    for(int i=0; i<n; i++)
    {
        for(int j=0; j<n; j++)
        {
            scanf("%d", &Graph[i][j]);
        }
    }
}

void DFS(int startVertext)
{
    printf("%d  ", startVertext);
    visited[startVertext]=1;
    for (int j = 0; j < n; j++)
    {
        if(Graph[startVertext][j]==1 && !visited[j])
        {
            DFS(j);
        }
    }
    
}

void main()
{
    printf("\n********CONNCECTED COMPONENTS********\n");
    printf("\nEnter the number of vertices: ");
    scanf("%d",&n);
    InitializeGraph();
    InputGraph();
    int componentCount = 1;
    for(int i=0; i<n; i++)
    {
        if(!visited[i])
        {
            printf("\nComponent %d: ",componentCount);
            DFS(i); //the number of times DFS() is called is the number of different components in the graph
            componentCount++;
        }
    }

}
